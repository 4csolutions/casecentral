{
  "version": 3,
  "sources": ["../../../../../apps/casecentral/casecentral/public/js/task_quick_entry.js"],
  "sourcesContent": ["frappe.provide('frappe.ui.form');\n\nfrappe.ui.form.TaskQuickEntryForm = class TaskQuickEntryForm extends frappe.ui.form.QuickEntryForm {\n\tconstructor(doctype, after_insert, init_callback, doc, force) {\n\t\tsuper(doctype, after_insert, init_callback, doc, force);\n\t\tthis.skip_redirect_on_error = true;\n\t}\n\n\trender_dialog() {\n\t\tthis.mandatory = this.mandatory.concat(this.get_variant_fields());\n        super.render_dialog();\n        const taskTypeField = this.dialog.get_field('type');\n        const subjectField = this.dialog.get_field('subject');\n\n        if(this.doc.matter) {\n            frappe.db.get_value('Matter', this.doc.matter, 'matter_type', (r) => {\n                if(r && r.matter_type) {\n                    taskTypeField.df.get_query = () => {\n                        return {\n                            filters: {\n                                'matter_type': r.matter_type\n                            }\n                        };\n                    };\n                }\n            });   \n        }\n        // // Add filters to the \"Task Type\" field\n        // taskTypeField.df.get_query = () => {\n        //     const filters = {};\n        //     console.log(this.doc.matter);\n        //     if (this.doc.matter) {\n        //         filters['matter_type'] = frappe.get_doc('Matter', this.doc.matter).matter_type;\n        //     }\n        //     return {\n        //         filters: filters\n        //     };\n        // };\n\n        taskTypeField.df.onchange = () => {\n            const selectedTaskType = taskTypeField.get_value();\n            if (selectedTaskType) {\n                frappe.model.with_doc('Task Type', selectedTaskType, () => {\n                    const taskType = frappe.get_doc('Task Type', selectedTaskType);\n                    subjectField.set_value(taskType.description);\n                });\n            } else {\n                subjectField.set_value('');\n            }\n        };\n\t}\n\n\tget_variant_fields() {\n\t\tvar variant_fields = [{\n            fieldtype: \"MultiSelectPills\",\n            fieldname: \"assign_to\",\n            label: __(\"Assign To\"),\n            get_data: function (txt) {\n                return frappe.db.get_link_options(\"User\", txt, {\n                    user_type: \"System User\",\n                    enabled: 1,\n                });\n            },\n        }];\n\n        return variant_fields;\n    }\n}"],
  "mappings": ";;AAAA,SAAO,QAAQ,gBAAgB;AAE/B,SAAO,GAAG,KAAK,qBAAqB,MAAM,2BAA2B,OAAO,GAAG,KAAK,eAAe;AAAA,IAClG,YAAY,SAAS,cAAc,eAAe,KAAK,OAAO;AAC7D,YAAM,SAAS,cAAc,eAAe,KAAK,KAAK;AACtD,WAAK,yBAAyB;AAAA,IAC/B;AAAA,IAEA,gBAAgB;AACf,WAAK,YAAY,KAAK,UAAU,OAAO,KAAK,mBAAmB,CAAC;AAC1D,YAAM,cAAc;AACpB,YAAM,gBAAgB,KAAK,OAAO,UAAU,MAAM;AAClD,YAAM,eAAe,KAAK,OAAO,UAAU,SAAS;AAEpD,UAAG,KAAK,IAAI,QAAQ;AAChB,eAAO,GAAG,UAAU,UAAU,KAAK,IAAI,QAAQ,eAAe,CAAC,MAAM;AACjE,cAAG,KAAK,EAAE,aAAa;AACnB,0BAAc,GAAG,YAAY,MAAM;AAC/B,qBAAO;AAAA,gBACH,SAAS;AAAA,kBACL,eAAe,EAAE;AAAA,gBACrB;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ,CAAC;AAAA,MACL;AAaA,oBAAc,GAAG,WAAW,MAAM;AAC9B,cAAM,mBAAmB,cAAc,UAAU;AACjD,YAAI,kBAAkB;AAClB,iBAAO,MAAM,SAAS,aAAa,kBAAkB,MAAM;AACvD,kBAAM,WAAW,OAAO,QAAQ,aAAa,gBAAgB;AAC7D,yBAAa,UAAU,SAAS,WAAW;AAAA,UAC/C,CAAC;AAAA,QACL,OAAO;AACH,uBAAa,UAAU,EAAE;AAAA,QAC7B;AAAA,MACJ;AAAA,IACP;AAAA,IAEA,qBAAqB;AACpB,UAAI,iBAAiB,CAAC;AAAA,QACZ,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO,GAAG,WAAW;AAAA,QACrB,UAAU,SAAU,KAAK;AACrB,iBAAO,OAAO,GAAG,iBAAiB,QAAQ,KAAK;AAAA,YAC3C,WAAW;AAAA,YACX,SAAS;AAAA,UACb,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAAA,EACJ;",
  "names": []
}
